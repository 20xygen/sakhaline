// var def_x = [50.249063, 46.427535, 49.664286, 52.44062, 52.94591, 53.336491, 47.162958, 53.818794, 50.107005, 47.681852, 47.474231, 52.586356, 50.424368, 46.558941, 52.06536, 46.604844, 49.884571, 52.886996, 51.163616, 46.955137, 51.063921, 52.163214, 49.543087, 48.4488, 48.02102, 46.861248, 49.365379, 51.504471, 47.786073, 50.508182, 50.51728, 52.515383, 53.352214, 49.960592, 52.742729, 50.632509, 50.889628, 52.371692, 50.375973, 49.392016, 48.39746, 50.081844, 47.939292, 52.084931, 49.134376, 46.073026, 51.082616, 53.643804, 54.144386, 49.001277, 49.655699, 46.969909, 45.998653, 53.100016, 49.593651, 48.336687, 53.996569, 49.451512, 47.869469, 51.353144, 53.575005, 53.351636, 51.969482, 51.775199, 51.566414, 52.711789, 50.470972, 53.827361, 46.637689, 47.827334, 48.395576, 52.391558, 51.97646, 49.672879, 47.78255, 50.371028, 51.96758, 52.927228, 48.850106, 49.937885, 46.183, 49.496501, 52.010649, 48.764221, 46.733291, 48.86405, 52.381553, 46.643421, 53.423646, 51.499934, 47.890895, 52.477573, 51.115002, 49.195323, 53.316419, 46.735496, 50.822915, 49.288681, 50.932684, 50.731236, 52.090382, 48.269058, 53.189233, 52.001158, 48.799026, 49.126105, 46.957745, 48.316484, 50.592755, 52.212477, 54.079753, 49.52446, 46.800748, 53.303495, 52.279538, 53.987547, 47.854772, 49.183327, 51.053821, 45.948741, 47.039239, 50.437877, 49.344787, 50.973319, 46.481412, 50.006097, 50.906233, 51.721332, 52.762423, 46.138258, 50.824885, 52.369008, 48.955025, 48.043026, 51.920142, 47.457098, 48.330578, 51.864445, 48.888925, 51.576645, 47.967673, 51.649492, 49.562856, 46.556388, 52.163415, 46.302504, 48.31365, 49.429261, 47.893939, 52.054624, 49.312496, 53.540452, 49.656292, 47.533116, 49.493256, 49.655745, 48.034414, 50.908369, 53.075258, 47.846424, 53.850166, 51.353441, 46.965422, 52.973766, 53.696522, 53.818495, 48.868077, 48.724865, 53.763812, 46.914997, 48.440137, 46.433021, 53.470733, 48.910932, 47.397246, 53.877007, 52.985879, 49.691745, 54.158564, 48.028471, 52.058839, 47.459605, 46.116711, 49.55184, 51.856251, 52.276542, 48.704793, 45.962003, 53.362317, 52.253756, 50.103365, 49.803789, 51.357226, 53.868143, 51.728001, 51.527167, 48.362168, 48.993028, 47.349426, 53.468485, 49.824408]
// var def_y = [144.364106, 143.079537, 143.398209, 141.632892, 143.260343, 142.463215, 143.883447, 142.345981, 142.458302, 143.927199, 144.347946, 144.005507, 141.536295, 144.213926, 142.548519, 142.472431, 143.561989, 141.195655, 142.10164, 142.688723, 143.15118, 142.21627, 143.865568, 142.069589, 142.463682, 141.371141, 143.953131, 141.79313, 144.366881, 143.106783, 143.357877, 142.839622, 144.091027, 141.741796, 141.821387, 141.64955, 144.319498, 142.686451, 143.528106, 144.257734, 144.57395, 142.760327, 141.509124, 144.358441, 141.899787, 142.348745, 142.549872, 142.275929, 141.297301, 141.380954, 143.789947, 143.794715, 143.95742, 144.352315, 142.218817, 141.818018, 143.324944, 141.804825, 143.727927, 142.863083, 141.769054, 142.993501, 144.317979, 141.675526, 143.725103, 143.016816, 141.924368, 144.436385, 141.519548, 142.35689, 142.536527, 141.926037, 144.00343, 143.614207, 141.624921, 142.223973, 142.276873, 143.723262, 142.213861, 143.952154, 142.23746, 141.295952, 141.706568, 142.023681, 144.558976, 141.513502, 144.34455, 144.435544, 143.143955, 142.543267, 142.812073, 143.381426, 142.577079, 142.356615, 143.083669, 142.681855, 142.051246, 141.457391, 143.526244, 143.564328, 144.162376, 141.375461, 142.181395, 142.757342, 142.24448, 142.649598, 143.995014, 143.727616, 141.344655, 143.74932, 143.861102, 141.828158, 142.123916, 143.279887, 142.573629, 143.597789, 142.807612, 142.692648, 142.831349, 141.666408, 144.191185, 142.980069, 142.535761, 143.282064, 144.023891, 143.423897, 141.254615, 143.366124, 143.611745, 143.810611, 144.367978, 144.274909, 142.419871, 141.906726, 142.814381, 143.422776, 141.166841, 144.429147, 143.373406, 141.762534, 142.406207, 142.953387, 142.048167, 142.825499, 141.843522, 143.257927, 143.820312, 142.077815, 143.181649, 143.077809, 141.486198, 141.357684, 142.139571, 144.485923, 142.157351, 144.364548, 142.135771, 144.43157, 143.518604, 141.409114, 142.165613, 141.574038, 142.404542, 141.409378, 141.421746, 142.132858, 143.164228, 141.544797, 142.377933, 141.57889, 141.898012, 142.185539, 141.323383, 142.177606, 142.355376, 144.246746, 144.362403, 141.388732, 142.002197, 143.599323, 141.439818, 144.526143, 142.451768, 142.984594, 141.508981, 141.20631, 141.387226, 141.296112, 141.253503, 142.382904, 141.666873, 144.579394, 141.457387, 141.871206, 142.027703, 142.090598, 144.141276, 141.41849, 143.607043, 141.812528, 143.632548]
// var used = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

// var real = [[51.834388, 141.177188, 'The bay is Quiet'], 
// [46.868895, 142.888753, 'The Frog Outlier'],
// [50.888751, 142.118362, 'Joniker Lighthouse'],
// [46.018918, 143.414062, 'Aniva Lighthouse'],
// [48.780101, 141.850236, 'Lamanon Lighthouse'],
// [48.071478, 142.531275, 'Susunai Ridge'],
// [47.299897, 141.970308, 'Lighthouse and Cape Slepikovsky'],
// [46.634763, 143.515110, 'Cape Bird'] ]

// for (let i = 0; i < 8; i++) {
//     used.push(0)
//     def_x.push(real[i][0])
//     def_y.push(real[i][1])
// }

// let test_x = [50.711203, 50.808101, 50.70407, 50.089067, 48.745811, 48.078602, 47.177426, 47.133443, 47.191803, 47.812813]
// let test_y = [141.43932, 142.777087, 143.706427, 144.282254, 143.626249, 144.282254, 143.961295, 142.716227, 142.112464, 141.455416]

// var found_x = []
// var found_y = []

// let r = 0.5

// for (let i = 0; i < 10 - 1; i++) {
//     next_x = test_x[i+1]
//     next_y = test_y[i+1]
//     cur_x = test_x[i]
//     cur_y = test_y[i]

//     if (cur_x == next_x) { // vertical
//         for (let j = 0; j < 208; j++) {
//             if (used[j] == 0) {
//                 if (next_y[j] > cur_y){
//                     if (def_x[j] >= cur_x[j] - r && def_x[j] <= cur_x[j] + r && def_y[j] >= cur_y[j] && def_y[j] <= next_y[j]) {
//                         found_x.push(def_x[j])
//                         found_y.push(def_y[j])
//                         used[j] = 1
//                     }
//                 }
//                 else {
//                     if (def_x[j] >= cur_x[j] - r && def_x[j] <= cur_x[j] + r && def_y[j] <= cur_y[j] && def_y[j] >= next_y[j]) {
//                         found_x.push(def_x[j])
//                         found_y.push(def_y[j])
//                         used[j] = 1
//                     }
//                 }
//             }
            
//             if (used[j] == 0) {
//                 if ((def_x[j] - cur_x[j]) ** 2 + (def_y[j] - cur_y[j]) ** 2 <= r ** 2){
//                     found_x.push(def_x[j])
//                     found_y.push(def_y[j])
//                     used[j] = 1
//                 }
//             }
//             if (used[j] == 0) {
//                 if ((def_x[j] - next_x[j]) ** 2 + (def_y[j] - next_y[j]) ** 2 <= r ** 2){
//                     found_x.push(def_x[j])
//                     found_y.push(def_y[j])
//                     used[j] = 1
//                 }
//             }
//         }
//     }
//     else if (cur_y == next_y) { // horizontal
//         for (let j = 0; j < 208; j++) {
//             if (used[j] == 0) {
//                 if (next_x[j] > cur_x){
//                     if (def_x[j] >= cur_x[j] && def_x[j] <= next_x[j] && def_y[j] >= cur_y[j] - r && def_y[j] <= next_y[j] + r) {
//                         found_x.push(def_x[j])
//                         found_y.push(def_y[j])
//                         used[j] = 1
//                     }
//                 }
//                 else {
//                     if (def_x[j] <= cur_x[j] && def_x[j] >= next_x[j] && def_y[j] >= cur_y[j] - r && def_y[j] <= next_y[j] + r) {
//                         found_x.push(def_x[j])
//                         found_y.push(def_y[j])
//                         used[j] = 1
//                     }
//                 }
//             }
            
//             if (used[j] == 0) {
//                 if ((def_x[j] - cur_x[j]) ** 2 + (def_y[j] - cur_y[j]) ** 2 <= r ** 2){
//                     found_x.push(def_x[j])
//                     found_y.push(def_y[j])
//                     used[j] = 1
//                 }
//             }
//             if (used[j] == 0) {
//                 if ((def_x[j] - next_x[j]) ** 2 + (def_y[j] - next_y[j]) ** 2 <= r ** 2){
//                     found_x.push(def_x[j])
//                     found_y.push(def_y[j])
//                     used[j] = 1
//                 }
//             }
//         }
//     }
//     else { // diagonal
//         var k = (next_y - cur_y) / (next_x - cur_x)
//         var b = cur_y - k * cur_x 

//         var ort_k = -1 / k
//         var ort_b_cur = cur_y - ort_k * cur_x
//         var ort_b_next = next_y - ort_k * next_x

//         var h = r / Math.sqrt(Math.abs(1 / (k ** 2 + 1)))
//         var b_top = b + h
//         var b_bot = b - h

//         for (let j = 0; j < 208; j++) {
//             if (used[j] == 0) {
//                 if (next_x > cur_x){
//                     if (k < 0) {
//                         if (def_y[j] <= def_x[j] * ort_k + ort_b_cur && def_y[j] >= def_x[j] * ort_k + ort_b_next && def_y[j] <= def_x[j] * k + b_top && def_y[j] >= def_x[j] * k + b_bot){
//                             found_x.push(def_x[j])
//                             found_y.push(def_y[j])
//                             used[j] = 1
//                         }
//                     }
//                     else {
//                         if (def_y[j] >= def_x[j] * ort_k + ort_b_cur && def_y[j] <= def_x[j] * ort_k + ort_b_next && def_y[j] <= def_x[j] * k + b_top && def_y[j] >= def_x[j] * k + b_bot){
//                             found_x.push(def_x[j])
//                             found_y.push(def_y[j])
//                             used[j] = 1
//                         }
//                     }
//                 }
//                 else {
//                     if (k < 0) {
//                         if (def_y[j] <= def_x[j] * ort_k + ort_b_next && def_y[j] >= def_x[j] * ort_k + ort_b_cur && def_y[j] <= def_x[j] * k + b_top && def_y[j] >= def_x[j] * k + b_bot){
//                             found_x.push(def_x[j])
//                             found_y.push(def_y[j])
//                             used[j] = 1
//                         }
//                     }
//                     else {
//                         if (def_y[j] >= def_x[j] * ort_k + ort_b_next && def_y[j] <= def_x[j] * ort_k + ort_b_cur && def_y[j] <= def_x[j] * k + b_top && def_y[j] >= def_x[j] * k + b_bot){
//                             found_x.push(def_x[j])
//                             found_y.push(def_y[j])
//                             used[j] = 1
//                         }
//                     }
//                 }
//             }
//             if (used[j] == 0) {
//                 if ((def_x[j] - cur_x[j]) ** 2 + (def_y[j] - cur_y[j]) ** 2 <= r ** 2){
//                     found_x.push(def_x[j])
//                     found_y.push(def_y[j])
//                     used[j] = 1
//                 }
//             }
//             if (used[j] == 0) {
//                 if ((def_x[j] - next_x[j]) ** 2 + (def_y[j] - next_y[j]) ** 2 <= r ** 2){
//                     found_x.push(def_x[j])
//                     found_y.push(def_y[j])
//                     used[j] = 1
//                 }
//             }
//         }
//     }
// }

// console.log('found:')
// for (let i = 0; i < found_x.length; i++) {
//     console.log(i, ':', found_x[i], found_y[i])
// }

// not_found_api = []
// found_api = []
// path_api = []
// not_found_real_api = []
// found_real_api = []

// for (let i = 0; i < 201; i++) {
//     if (used[i] == 0) {
//         not_found_api.push({center: [def_x[i], def_y[i]], name: '' + (i+1)})
//     }
//     else {
//         found_api.push({center: [def_x[i], def_y[i]], name: '' + (i+1)})
//     }
// }

// for (let i = 201; i < 201 + 8; i++) {
//     if (used[i] == 0) {
//         not_found_real_api.push({center: [def_x[i], def_y[i]], name: real[i - 201][2]})
//     }
//     else {
//         found_real_api.push({center: [def_x[i], def_y[i]], name: real[i - 201][2]})
//     }
// }

// for (let i = 0; i < test_x.length; i++) {
//     path_api.push({center: [test_x[i], test_y[i]], name: 'Path ' + (i+1)})
// }

// console.log(def_x.length, def_y.length, used.length)
// console.log(used)
// console.log(found_api)
// console.log(not_found_real_api)
// console.log(found_real_api)

// // Группы объектов
// var groups = [
//     {
//         name: 'Not found real',
//         style: "islands#blueIcon",
//         items: not_found_real_api
//     },
//     {
//         name: 'Found real',
//         style: "islands#yellowIcon",
//         items: found_real_api
//     },
//     {
//         name: 'Not found',
//         style: "islands#greyIcon",
//         items: not_found_api
//     },
//     {
//         name: 'Found',
//         style: "islands#greenIcon",
//         items: found_api
//     },
//     {
//         name: 'Path',
//         style: "islands#redIcon",
//         items: path_api
//     }
// ]

// console.log(groups)